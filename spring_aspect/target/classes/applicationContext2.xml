<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- bean definitions here -->

   <!--XML方式配置完成AOP开发-->
    <!--配置目标类-->
    <bean id="customerDao" class="com.hyx.aspectJ.demo2.CustomerDaoImpl"/>
    <!--配置切面类-->
    <bean id="myAspectJXml" class="com.hyx.aspectJ.demo2.MyAspectJXml"/>
    <!--AOP相关配置-->
    <aop:config>
        <!--配置切入点,接口的方法-->
        <aop:pointcut id="pointCut1" expression="execution(* com.hyx.aspectJ.demo2.CustomerDao.save(..))"/>
        <aop:pointcut id="pointCut2" expression="execution(* com.hyx.aspectJ.demo2.CustomerDao.update(..))"/>
        <aop:pointcut id="pointCut3" expression="execution(* com.hyx.aspectJ.demo2.CustomerDao.delete(..))"/>
        <aop:pointcut id="pointCut4" expression="execution(* com.hyx.aspectJ.demo2.CustomerDao.find(..))"/>
        <aop:pointcut id="pointCut5" expression="execution(* com.hyx.aspectJ.demo2.CustomerDao.findAll(..))"/>
        <!--配置AOP切面-->
        <aop:aspect ref="myAspectJXml">
            <!--配置前置通知-->
            <aop:before method="before" pointcut-ref="pointCut1"/>
            <!--配置前置通知-->
            <aop:after-returning method="afterReturning" pointcut-ref="pointCut2"/>
            <!--配置前置通知-->
            <aop:around method="around" pointcut-ref="pointCut3"/>
            <!--配置前置通知-->
            <aop:after-throwing method="throwing" pointcut-ref="pointCut4" throwing="e"/>
            <!--配置前置通知-->
            <aop:after method="after" pointcut-ref="pointCut5"/>
        </aop:aspect>
    </aop:config>
</beans>
